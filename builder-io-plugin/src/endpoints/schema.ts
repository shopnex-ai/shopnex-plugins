export const getModelSchema = ({
    name,
    subType,
}: {
    name: string;
    subType: string;
}) => ({
    defaultQuery: [],
    appetizeKeys: [],
    requiredTargets: [],
    targetingSubset: [],
    webhooks: [],
    defaultTemplates: [],
    name,
    displayName: "",
    kind: "component",
    subType,
    schema: {},
    fields: [
        {
            defaultValue: [],
            subFields: [],
            "@type": "@builder.io/core:Field",
            meta: {},
            name: "blocks",
            type: "uiBlocks",
            required: false,
            helperText: "",
            autoFocus: false,
            simpleTextOnly: false,
            disallowRemove: false,
            broadcast: false,
            bubble: false,
            hideFromUI: false,
            hideFromFieldsEditor: false,
            showTemplatePicker: true,
            permissionsRequiredToEdit: "",
            advanced: false,
            copyOnAdd: true,
            onChange: "",
            behavior: "",
            showIf: "",
            mandatory: false,
            hidden: true,
            noPhotoPicker: false,
            model: "",
            supportsAiGeneration: false,
            includeInStyleTab: false,
            defaultCollapsed: false,
        },
    ],
    repeatable: false,
    autoTracked: true,
    singleton: false,
    hideOptions: false,
    hidden: false,
    getSchemaFromPage: false,
    designerVersion: 1,
    archived: false,
    individualEmbed: false,
    injectWcAt: "",
    injectWcPosition: "",
    isPage: false,
    appetizeApiKey: "",
    isNativeOnly: false,
    helperText: "Reusable Builder content",
    targetsReactNative: false,
    contentTitleField: null,
    useQueryParamTargetingClientSide: false,
    showOnHierarchyPage: true,
    componentsOnlyMode: false,
    allowBuiltInComponents: true,
    bigData: false,
    sendToElasticSearch: false,
    sendToMongoDb: true,
    allowMetrics: true,
    allowTests: true,
    allowHeatmap: true,
    allowPreview: true,
    publicWritable: false,
    publicReadable: true,
    strictPrivateRead: false,
    strictPrivateWrite: false,
    showMetrics: true,
    showAbTests: true,
    showTargeting: true,
    showScheduling: true,
    hooks: {},
    pathPrefix: "/",
    hideFromUI: false,
    enableIframeFormSubmissions: false,
    previewIframeTimeoutInSeconds: 20,
    requireTemplate: false,
    lastUpdateBy: null,
});
